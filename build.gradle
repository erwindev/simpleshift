group = 'com.erwin'

apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

jar {
    baseName = 'simpleshift'
}

repositories {
    mavenCentral()
    maven {
        url 'https://repo.spring.io/libs-milestone'
    }
}

buildscript {
    ext {
        springBootVersion = '2.0.0.RELEASE'
    }
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("io.spring.gradle:dependency-management-plugin:0.5.4.RELEASE")
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:3.0.1"
        classpath "com.netflix.nebula:nebula-release-plugin:6.3.0"
        classpath "com.netflix.nebula:nebula-publishing-plugin:5.1.0"
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.3.11'
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-jetty")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile('org.springframework.cloud:spring-cloud-starter-config')
    testCompile("junit:junit")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Finchley.M8"
    }
}

def artifactory_url = hasProperty('artifactory_url') ? artifactory_url : System.getenv('artifactory_url')
if (artifactory_url != null) {

    apply plugin: "nebula.release"

    def artifactory_username = hasProperty('artifactory_username') ? artifactory_username : System.getenv('artifactory_username')
    def artifactory_password = hasProperty('artifactory_password') ? artifactory_password : System.getenv('artifactory_password')
    def artifactory_repo = hasProperty('artifactory_repo') ? artifactory_repo : System.getenv('artifactory_repo')
    def git_username = hasProperty('git_username') ? git_username : System.getenv('git_username')
    def git_password = hasProperty('git_password') ? git_password : System.getenv('git_password')


    System.setProperty('org.ajoberstar.grgit.auth.username', git_username)
    System.setProperty('org.ajoberstar.grgit.auth.password', git_password)

    apply plugin: "com.jfrog.artifactory"
    apply plugin: "nebula.maven-base-publish"

    artifactory {
        contextUrl = "${artifactory_url}"
        publish {
            repository {
                repoKey = "${artifactory_repo}"
                username = "${artifactory_username}"
                password = "${artifactory_password}"
            }
            defaults {
                publications('mavenJava')
            }
        }
    }
}
